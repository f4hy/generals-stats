// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: proto/match.proto

package generalsstats

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type General int32

const (
	General_USA      General = 0
	General_AIR      General = 1
	General_LASER    General = 2
	General_SUPER    General = 3
	General_CHINA    General = 4
	General_NUKE     General = 5
	General_TANK     General = 6
	General_INFANTRY General = 7
	General_GLA      General = 8
	General_TOXIN    General = 9
	General_STEALTH  General = 10
	General_DEMO     General = 11
)

// Enum value maps for General.
var (
	General_name = map[int32]string{
		0:  "USA",
		1:  "AIR",
		2:  "LASER",
		3:  "SUPER",
		4:  "CHINA",
		5:  "NUKE",
		6:  "TANK",
		7:  "INFANTRY",
		8:  "GLA",
		9:  "TOXIN",
		10: "STEALTH",
		11: "DEMO",
	}
	General_value = map[string]int32{
		"USA":      0,
		"AIR":      1,
		"LASER":    2,
		"SUPER":    3,
		"CHINA":    4,
		"NUKE":     5,
		"TANK":     6,
		"INFANTRY": 7,
		"GLA":      8,
		"TOXIN":    9,
		"STEALTH":  10,
		"DEMO":     11,
	}
)

func (x General) Enum() *General {
	p := new(General)
	*p = x
	return p
}

func (x General) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (General) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_match_proto_enumTypes[0].Descriptor()
}

func (General) Type() protoreflect.EnumType {
	return &file_proto_match_proto_enumTypes[0]
}

func (x General) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use General.Descriptor instead.
func (General) EnumDescriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{0}
}

type Team int32

const (
	Team_NONE  Team = 0
	Team_ONE   Team = 1
	Team_TWO   Team = 2
	Team_THREE Team = 3
	Team_FOUR  Team = 4
)

// Enum value maps for Team.
var (
	Team_name = map[int32]string{
		0: "NONE",
		1: "ONE",
		2: "TWO",
		3: "THREE",
		4: "FOUR",
	}
	Team_value = map[string]int32{
		"NONE":  0,
		"ONE":   1,
		"TWO":   2,
		"THREE": 3,
		"FOUR":  4,
	}
)

func (x Team) Enum() *Team {
	p := new(Team)
	*p = x
	return p
}

func (x Team) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Team) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_match_proto_enumTypes[1].Descriptor()
}

func (Team) Type() protoreflect.EnumType {
	return &file_proto_match_proto_enumTypes[1]
}

func (x Team) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Team.Descriptor instead.
func (Team) EnumDescriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{1}
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	General General `protobuf:"varint,2,opt,name=general,proto3,enum=matches.General" json:"general,omitempty"`
	Team    Team    `protobuf:"varint,3,opt,name=team,proto3,enum=matches.Team" json:"team,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetGeneral() General {
	if x != nil {
		return x.General
	}
	return General_USA
}

func (x *Player) GetTeam() Team {
	if x != nil {
		return x.Team
	}
	return Team_NONE
}

type MatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Map         string                 `protobuf:"bytes,3,opt,name=map,proto3" json:"map,omitempty"`
	WinningTeam Team                   `protobuf:"varint,4,opt,name=winning_team,json=winningTeam,proto3,enum=matches.Team" json:"winning_team,omitempty"`
	Players     []*Player              `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *MatchInfo) Reset() {
	*x = MatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchInfo) ProtoMessage() {}

func (x *MatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchInfo.ProtoReflect.Descriptor instead.
func (*MatchInfo) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{1}
}

func (x *MatchInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MatchInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MatchInfo) GetMap() string {
	if x != nil {
		return x.Map
	}
	return ""
}

func (x *MatchInfo) GetWinningTeam() Team {
	if x != nil {
		return x.WinningTeam
	}
	return Team_NONE
}

func (x *MatchInfo) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type Matches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*MatchInfo `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *Matches) Reset() {
	*x = Matches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matches) ProtoMessage() {}

func (x *Matches) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matches.ProtoReflect.Descriptor instead.
func (*Matches) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{2}
}

func (x *Matches) GetMatches() []*MatchInfo {
	if x != nil {
		return x.Matches
	}
	return nil
}

type WinLoss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wins   int32 `protobuf:"varint,1,opt,name=wins,proto3" json:"wins,omitempty"`
	Losses int32 `protobuf:"varint,2,opt,name=losses,proto3" json:"losses,omitempty"`
}

func (x *WinLoss) Reset() {
	*x = WinLoss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinLoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinLoss) ProtoMessage() {}

func (x *WinLoss) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinLoss.ProtoReflect.Descriptor instead.
func (*WinLoss) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{3}
}

func (x *WinLoss) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *WinLoss) GetLosses() int32 {
	if x != nil {
		return x.Losses
	}
	return 0
}

type PlayerStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string                  `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Stats      []*PlayerStat_GeneralWL `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *PlayerStat) Reset() {
	*x = PlayerStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStat) ProtoMessage() {}

func (x *PlayerStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStat.ProtoReflect.Descriptor instead.
func (*PlayerStat) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerStat) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerStat) GetStats() []*PlayerStat_GeneralWL {
	if x != nil {
		return x.Stats
	}
	return nil
}

type PlayerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerStats []*PlayerStat `protobuf:"bytes,1,rep,name=player_stats,json=playerStats,proto3" json:"player_stats,omitempty"`
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerStats) GetPlayerStats() []*PlayerStat {
	if x != nil {
		return x.PlayerStats
	}
	return nil
}

type GeneralStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	General General                 `protobuf:"varint,1,opt,name=general,proto3,enum=matches.General" json:"general,omitempty"`
	Stats   []*GeneralStat_PlayerWL `protobuf:"bytes,2,rep,name=stats,proto3" json:"stats,omitempty"`
	Total   *WinLoss                `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GeneralStat) Reset() {
	*x = GeneralStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralStat) ProtoMessage() {}

func (x *GeneralStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralStat.ProtoReflect.Descriptor instead.
func (*GeneralStat) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{6}
}

func (x *GeneralStat) GetGeneral() General {
	if x != nil {
		return x.General
	}
	return General_USA
}

func (x *GeneralStat) GetStats() []*GeneralStat_PlayerWL {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GeneralStat) GetTotal() *WinLoss {
	if x != nil {
		return x.Total
	}
	return nil
}

type GeneralStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralStats []*GeneralStat `protobuf:"bytes,1,rep,name=general_stats,json=generalStats,proto3" json:"general_stats,omitempty"`
}

func (x *GeneralStats) Reset() {
	*x = GeneralStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralStats) ProtoMessage() {}

func (x *GeneralStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralStats.ProtoReflect.Descriptor instead.
func (*GeneralStats) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{7}
}

func (x *GeneralStats) GetGeneralStats() []*GeneralStat {
	if x != nil {
		return x.GeneralStats
	}
	return nil
}

type SaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SaveResponse) Reset() {
	*x = SaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveResponse) ProtoMessage() {}

func (x *SaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveResponse.ProtoReflect.Descriptor instead.
func (*SaveResponse) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{8}
}

func (x *SaveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PlayerStat_GeneralWL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	General General  `protobuf:"varint,1,opt,name=general,proto3,enum=matches.General" json:"general,omitempty"`
	WinLoss *WinLoss `protobuf:"bytes,2,opt,name=win_loss,json=winLoss,proto3" json:"win_loss,omitempty"`
}

func (x *PlayerStat_GeneralWL) Reset() {
	*x = PlayerStat_GeneralWL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerStat_GeneralWL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStat_GeneralWL) ProtoMessage() {}

func (x *PlayerStat_GeneralWL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStat_GeneralWL.ProtoReflect.Descriptor instead.
func (*PlayerStat_GeneralWL) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PlayerStat_GeneralWL) GetGeneral() General {
	if x != nil {
		return x.General
	}
	return General_USA
}

func (x *PlayerStat_GeneralWL) GetWinLoss() *WinLoss {
	if x != nil {
		return x.WinLoss
	}
	return nil
}

type GeneralStat_PlayerWL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string   `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	WinLoss    *WinLoss `protobuf:"bytes,2,opt,name=win_loss,json=winLoss,proto3" json:"win_loss,omitempty"`
}

func (x *GeneralStat_PlayerWL) Reset() {
	*x = GeneralStat_PlayerWL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_match_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralStat_PlayerWL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralStat_PlayerWL) ProtoMessage() {}

func (x *GeneralStat_PlayerWL) ProtoReflect() protoreflect.Message {
	mi := &file_proto_match_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralStat_PlayerWL.ProtoReflect.Descriptor instead.
func (*GeneralStat_PlayerWL) Descriptor() ([]byte, []int) {
	return file_proto_match_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GeneralStat_PlayerWL) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *GeneralStat_PlayerWL) GetWinLoss() *WinLoss {
	if x != nil {
		return x.WinLoss
	}
	return nil
}

var File_proto_match_proto protoreflect.FileDescriptor

var file_proto_match_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x07,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x22, 0xc4, 0x01, 0x0a, 0x09, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x22, 0x37, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x07, 0x57, 0x69,
	0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x22, 0xc8, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x57, 0x4c, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x57, 0x4c, 0x12, 0x2a, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12,
	0x2b, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x6e, 0x4c,
	0x6f, 0x73, 0x73, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x22, 0x45, 0x0a, 0x0b,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12,
	0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x4c, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x57, 0x69,
	0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0x58, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x4c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x77, 0x69, 0x6e,
	0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x57, 0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x07, 0x77,
	0x69, 0x6e, 0x4c, 0x6f, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x22, 0x28, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x89, 0x01, 0x0a, 0x07,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x53, 0x41, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x49, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x41, 0x53,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x55, 0x50, 0x45, 0x52, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x48, 0x49, 0x4e, 0x41, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4b, 0x45, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41, 0x4e, 0x4b, 0x10, 0x06, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x4e, 0x46, 0x41, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03,
	0x47, 0x4c, 0x41, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x58, 0x49, 0x4e, 0x10, 0x09,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x10, 0x0a, 0x12, 0x08, 0x0a,
	0x04, 0x44, 0x45, 0x4d, 0x4f, 0x10, 0x0b, 0x2a, 0x37, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4e, 0x45,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54,
	0x48, 0x52, 0x45, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x04,
	0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66,
	0x34, 0x68, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x3b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x73, 0x74, 0x61, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_match_proto_rawDescOnce sync.Once
	file_proto_match_proto_rawDescData = file_proto_match_proto_rawDesc
)

func file_proto_match_proto_rawDescGZIP() []byte {
	file_proto_match_proto_rawDescOnce.Do(func() {
		file_proto_match_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_match_proto_rawDescData)
	})
	return file_proto_match_proto_rawDescData
}

var file_proto_match_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_match_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_match_proto_goTypes = []interface{}{
	(General)(0),                  // 0: matches.General
	(Team)(0),                     // 1: matches.Team
	(*Player)(nil),                // 2: matches.Player
	(*MatchInfo)(nil),             // 3: matches.MatchInfo
	(*Matches)(nil),               // 4: matches.Matches
	(*WinLoss)(nil),               // 5: matches.WinLoss
	(*PlayerStat)(nil),            // 6: matches.PlayerStat
	(*PlayerStats)(nil),           // 7: matches.PlayerStats
	(*GeneralStat)(nil),           // 8: matches.GeneralStat
	(*GeneralStats)(nil),          // 9: matches.GeneralStats
	(*SaveResponse)(nil),          // 10: matches.SaveResponse
	(*PlayerStat_GeneralWL)(nil),  // 11: matches.PlayerStat.GeneralWL
	(*GeneralStat_PlayerWL)(nil),  // 12: matches.GeneralStat.PlayerWL
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_proto_match_proto_depIdxs = []int32{
	0,  // 0: matches.Player.general:type_name -> matches.General
	1,  // 1: matches.Player.team:type_name -> matches.Team
	13, // 2: matches.MatchInfo.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 3: matches.MatchInfo.winning_team:type_name -> matches.Team
	2,  // 4: matches.MatchInfo.players:type_name -> matches.Player
	3,  // 5: matches.Matches.matches:type_name -> matches.MatchInfo
	11, // 6: matches.PlayerStat.stats:type_name -> matches.PlayerStat.GeneralWL
	6,  // 7: matches.PlayerStats.player_stats:type_name -> matches.PlayerStat
	0,  // 8: matches.GeneralStat.general:type_name -> matches.General
	12, // 9: matches.GeneralStat.stats:type_name -> matches.GeneralStat.PlayerWL
	5,  // 10: matches.GeneralStat.total:type_name -> matches.WinLoss
	8,  // 11: matches.GeneralStats.general_stats:type_name -> matches.GeneralStat
	0,  // 12: matches.PlayerStat.GeneralWL.general:type_name -> matches.General
	5,  // 13: matches.PlayerStat.GeneralWL.win_loss:type_name -> matches.WinLoss
	5,  // 14: matches.GeneralStat.PlayerWL.win_loss:type_name -> matches.WinLoss
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_match_proto_init() }
func file_proto_match_proto_init() {
	if File_proto_match_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_match_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinLoss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerStat_GeneralWL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_match_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralStat_PlayerWL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_match_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_match_proto_goTypes,
		DependencyIndexes: file_proto_match_proto_depIdxs,
		EnumInfos:         file_proto_match_proto_enumTypes,
		MessageInfos:      file_proto_match_proto_msgTypes,
	}.Build()
	File_proto_match_proto = out.File
	file_proto_match_proto_rawDesc = nil
	file_proto_match_proto_goTypes = nil
	file_proto_match_proto_depIdxs = nil
}
